---
id: 5111
article_id: 4894
created_at: 2008-04-24 13:39:33.000000000 Z
url: 
email: nick@ekenosen.net
author: nicholas a. evans
ip: 216.230.102.194
body: |-
  Or you could use my ValidationSpecHelper module, which could be called like so:

  <pre>
  @it.should accept("blah").for(:firstname)
  @it.should accept(:firstname).of("foobar")
  @it.should reject(:firstname).of("")
  @it.should reject(:firstname).of("chunky").with("reason")
  </pre>

  and return failure messages like so:

  <pre>
  expected validation to accept "" for firstname
  but firstname had the following errors:
  - firstname: can't be blank

  expected validation to reject "a name" for firstname
  but firstname was valid
  </pre>

  and so on...

  http://svn.ekenosen.net/public/rspec_validation_matcher/

  There are other validation spec matchers out there, but I like mine the best.  ;-)
guid: f7ea3d87-c8c2-4012-8423-9f188c2d99f3
