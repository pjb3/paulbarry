---
id: 5309
article_id: 4943
created_at: 2009-07-18 04:43:12.000000000 Z
url: 
email: 
author: solrize
ip: 67.117.147.249
body: |
  Paul @ #7, yes, you can chain Maybes the same way.  Say you have "job" and "salary" functions with these signatures, and "bob" is a person:

  job :: Person -> Maybe Job
  salary :: Job -> Maybe Salary
  bob :: Person

  Then you can the "job" function to get either Bob's job (if he has one) or Nothing (if he has no job).  And then, you can use the ">>=" (monadic bind) operator to pass the output of "job" to "salary", if there is an output, but otherwise just return Nothing immediately:

    bobsSalary :: Maybe Salary
    bobsSalary = job bob >>= salary

  Andrej Bauer has a good rant about the evils of using null pointers instead of something like Maybe:

  http://math.andrej.com/2009/04/11/on-programming-language-design/

  See the "undefined values" section.
guid: 316949d6-a3c6-49d5-a0e8-21a5d22edc87
