---
id: 5210
article_id: 4913
created_at: 2008-09-29 23:28:14.000000000 Z
url: 
email: fabtheman@gmail.com
author: Fabio
ip: 70.68.161.33
body: |-
  I winced when I first saw this, but then something clicked.

  You are not taking out methods (etc.) just for the sake of cleaning up your model. You aren't making a skinny model just to say that you have skinny models. You are taking out functionality that _doesn't belong_ in the the model in the first place. An ActiveRecord model should handle only ActiveRecord stuff. The idea is that authentication, to follow the example from the article, has nothing to do with the ActiveRecord User model. This is just a separation of concerns (hence the concerned_with name). For the same reason that it is not good to do an AR find inside a view, or to have search logic inside a controller, it is not a good idea to put authentication stuff in a model. And its worth noting that you are not wanting to just hide some methods and stuff (though that is nice), you want to extract a class; there's an extra class hidden inside your model and you are taking it out. A module cannot do this.

  This is a great refactoring tool. Thank you.
guid: 4434669b-60aa-4ec8-98d8-8702b59d9d31
